AWSTemplateFormatVersion : '2010-09-09'

Parameters:
  Project:
    Type: String
    Default: 'webapp'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True
      Tags: 
        - Key: Name
          Value: !Join [ "-", [ !Ref Project, "vpc" ] ]
   
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Join [ "", [ !Ref "AWS::Region", "a" ] ]
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Join [ "-", [ !Ref Project, "public-subnet-1" ] ]
           
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Join [ "", [ !Ref "AWS::Region", "b" ] ]
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Join [ "-", [ !Ref Project, "public-subnet-2" ] ]

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Join [ "", [ !Ref "AWS::Region", "c" ] ]
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Join [ "-", [ !Ref Project, "public-subnet-3" ] ]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: !Join [ "-", [ !Ref Project, "igw" ] ]

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Join [ "-", [ !Ref Project, "rt" ] ]
      VpcId: !Ref VPC

  IGWRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref  PublicSubnet1

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref  PublicSubnet2
      
  SubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref  PublicSubnet3

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Used for webservers
      GroupName: !Join [ "-", [ !Ref Project, "public-sg" ] ]
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  WebServerSGParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/SecurityGroups/WebServer'
      Type: String
      Value: !Ref WebServerSecurityGroup
      
  PublicSubnet1Param:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/Subnets/PublicSubnet1'
      Type: String
      Value: !Ref PublicSubnet1

  PublicSubnet2Param:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/Subnets/PublicSubnet2'
      Type: String
      Value: !Ref PublicSubnet2

  PublicSubnet3Param:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/Subnets/PublicSubnet3'
      Type: String
      Value: !Ref PublicSubnet3

  VPCParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/VPC/Id'
      Type: String
      Value: !Ref VPC